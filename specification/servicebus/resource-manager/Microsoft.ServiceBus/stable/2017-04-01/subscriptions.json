{
  "swagger": "2.0",
  "info": {
    "title": "ServiceBusManagementClient",
    "description": "Azure Service Bus client",
    "version": "2017-04-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/subscriptions": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "Subscriptions_ListByTopic",
        "x-ms-examples": {
          "SubscriptionListByTopic": {
            "$ref": "./examples/Subscriptions/SBSubscriptionListByTopic.json"
          }
        },
        "description": "List all the subscriptions under a specified topic.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639400.aspx"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "#/parameters/TopicNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/SkipParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of subscriptions.",
            "schema": {
              "$ref": "#/definitions/SBSubscriptionListResult"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/subscriptions/{subscriptionName}": {
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "Subscriptions_CreateOrUpdate",
        "x-ms-examples": {
          "SubscriptionCreate": {
            "$ref": "./examples/Subscriptions/SBSubscriptionCreate.json"
          }
        },
        "description": "Creates a topic subscription.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639385.aspx"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "#/parameters/TopicNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SBSubscription"
            },
            "description": "Parameters supplied to create a subscription resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription create request accepted.",
            "schema": {
              "$ref": "#/definitions/SBSubscription"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "Subscriptions_Delete",
        "x-ms-examples": {
          "SubscriptionDelete": {
            "$ref": "./examples/Subscriptions/SBSubscriptionDelete.json"
          }
        },
        "description": "Deletes a subscription from the specified topic.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639381.aspx"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "#/parameters/TopicNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription successfully deleted."
          },
          "204": {
            "description": "No content."
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "Subscriptions_Get",
        "x-ms-examples": {
          "SubscriptionGet": {
            "$ref": "./examples/Subscriptions/SBSubscriptionGet.json"
          }
        },
        "description": "Returns a subscription description for the specified topic.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639402.aspx"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "#/parameters/TopicNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved subscription description.",
            "schema": {
              "$ref": "#/definitions/SBSubscription"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Resource": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        }
      },
      "x-ms-azure-resource": true,
      "description": "The Resource definition for other than namespace."
    },
    "MessageCountDetails": {
      "type": "object",
      "properties": {
        "activeMessageCount": {
          "readOnly": true,
          "format": "int64",
          "type": "integer",
          "description": "Number of active messages in the queue, topic, or subscription."
        },
        "deadLetterMessageCount": {
          "readOnly": true,
          "format": "int64",
          "type": "integer",
          "description": "Number of messages that are dead lettered."
        },
        "scheduledMessageCount": {
          "readOnly": true,
          "format": "int64",
          "type": "integer",
          "description": "Number of scheduled messages."
        },
        "transferMessageCount": {
          "readOnly": true,
          "format": "int64",
          "type": "integer",
          "description": "Number of messages transferred to another queue, topic, or subscription."
        },
        "transferDeadLetterMessageCount": {
          "readOnly": true,
          "format": "int64",
          "type": "integer",
          "description": "Number of messages transferred into dead letters."
        }
      },
      "description": "Message Count Details."
    },
    "SBSubscriptionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SBSubscription"
          },
          "description": "Result of the List Subscriptions operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of subscriptions."
        }
      },
      "description": "The response to the List Subscriptions operation."
    },
    "SBSubscription": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SBSubscriptionProperties",
          "description": "Properties of subscriptions resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of subscription resource."
    },
    "SBSubscriptionProperties": {
      "properties": {
        "messageCount": {
          "readOnly": true,
          "format": "int64",
          "type": "integer",
          "description": "Number of messages."
        },
        "createdAt": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Exact time the message was created."
        },
        "accessedAt": {
          "readOnly": true,
          "format": "date-time",
          "type": "string",
          "description": "Last time there was a receive request to this subscription."
        },
        "updatedAt": {
          "readOnly": true,
          "format": "date-time",
          "type": "string",
          "description": "The exact time the message was updated."
        },
        "countDetails": {
          "readOnly": true,
          "$ref": "#/definitions/MessageCountDetails",
          "description": "Message count details"
        },
        "lockDuration": {
          "format": "duration",
          "type": "string",
          "description": "ISO 8061 lock duration timespan for the subscription. The default value is 1 minute."
        },
        "requiresSession": {
          "type": "boolean",
          "description": "Value indicating if a subscription supports the concept of sessions."
        },
        "defaultMessageTimeToLive": {
          "format": "duration",
          "type": "string",
          "description": "ISO 8061 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
        },
        "deadLetteringOnFilterEvaluationExceptions": {
          "type": "boolean",
          "description": "Value that indicates whether a subscription has dead letter support on filter evaluation exceptions."
        },
        "deadLetteringOnMessageExpiration": {
          "type": "boolean",
          "description": "Value that indicates whether a subscription has dead letter support when a message expires."
        },
        "duplicateDetectionHistoryTimeWindow": {
          "format": "duration",
          "type": "string",
          "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
        },
        "maxDeliveryCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of maximum deliveries."
        },
        "status": {
          "$ref": "#/definitions/EntityStatus",
          "description": "Enumerates the possible values for the status of a messaging entity."
        },
        "enableBatchedOperations": {
          "type": "boolean",
          "description": "Value that indicates whether server-side batched operations are enabled."
        },
        "autoDeleteOnIdle": {
          "format": "duration",
          "type": "string",
          "description": "ISO 8061 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."
        },
        "forwardTo": {
          "type": "string",
          "description": "Queue/Topic name to forward the messages"
        },
        "forwardDeadLetteredMessagesTo": {
          "type": "string",
          "description": "Queue/Topic name to forward the Dead Letter message"
        }
      },
      "description": "Description of Subscription Resource."
    },
    "EntityStatus": {
      "type": "string",
      "enum": [
        "Active",
        "Disabled",
        "Restoring",
        "SendDisabled",
        "ReceiveDisabled",
        "Creating",
        "Deleting",
        "Renaming",
        "Unknown"
      ],
      "x-ms-enum": {
        "name": "EntityStatus",
        "modelAsString": false
      },
      "description": "Entity status."
    },
    "ErrorResponse": {
      "description": "Error response indicates ServiceBus service is not able to process the incoming request. The reason is provided in the error message.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string"
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method",
      "description": "Name of the Resource group within the Azure subscription."
    },
    "NamespaceNameParameter": {
      "name": "namespaceName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 6,
      "maxLength": 50,
      "x-ms-parameter-location": "method",
      "description": "The namespace name"
    },
    "TopicNameParameter": {
      "name": "topicName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "description": "The topic name."
    },
    "SubscriptionNameParameter": {
      "name": "subscriptionName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "x-ms-parameter-location": "method",
      "description": "The subscription name."
    },
    "SkipParameter": {
      "name": "$skip",
      "description": "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
      "in": "query",
      "required": false,
      "type": "integer",
      "minimum": 0,
      "maximum": 1000,
      "x-ms-parameter-location": "method"
    },
    "TopParameter": {
      "name": "$top",
      "description": "May be used to limit the number of results to the most recent N usageDetails.",
      "in": "query",
      "required": false,
      "type": "integer",
      "minimum": 1,
      "maximum": 1000,
      "x-ms-parameter-location": "method"
    }
  }
}