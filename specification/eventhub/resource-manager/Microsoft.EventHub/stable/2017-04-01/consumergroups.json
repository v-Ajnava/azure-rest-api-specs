{
  "swagger": "2.0",
  "info": {
    "title": "EventHubManagementClient",
    "description": "Azure Event Hubs client",
    "version": "2017-04-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}": {
      "put": {
        "tags": [
          "ConsumerGroups"
        ],
        "operationId": "ConsumerGroups_CreateOrUpdate",
        "x-ms-examples": {
          "ConsumerGroupCreate": {
            "$ref": "./examples/ConsumerGroup/EHConsumerGroupCreate.json"
          }
        },
        "description": "Creates or updates an Event Hubs consumer group as a nested resource within a Namespace.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "#/parameters/EventHubNameParameter"
          },
          {
            "$ref": "#/parameters/ConsumerGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConsumerGroup"
            },
            "description": "Parameters supplied to create or update a consumer group resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Consumer group successfully created.",
            "schema": {
              "$ref": "#/definitions/ConsumerGroup"
            }
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConsumerGroups"
        ],
        "operationId": "ConsumerGroups_Delete",
        "x-ms-examples": {
          "ConsumerGroupDelete": {
            "$ref": "./examples/ConsumerGroup/EHConsumerGroupDelete.json"
          }
        },
        "description": "Deletes a consumer group from the specified Event Hub and resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "#/parameters/EventHubNameParameter"
          },
          {
            "$ref": "#/parameters/ConsumerGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Consumer group deleted."
          },
          "204": {
            "description": "No content."
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ConsumerGroups"
        ],
        "operationId": "ConsumerGroups_Get",
        "x-ms-examples": {
          "ConsumerGroupGet": {
            "$ref": "./examples/ConsumerGroup/EHConsumerGroupGet.json"
          }
        },
        "description": "Gets a description for the specified consumer group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "#/parameters/EventHubNameParameter"
          },
          {
            "$ref": "#/parameters/ConsumerGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the consumer group description.",
            "schema": {
              "$ref": "#/definitions/ConsumerGroup"
            }
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups": {
      "get": {
        "tags": [
          "ConsumerGroups"
        ],
        "operationId": "ConsumerGroups_ListByEventHub",
        "x-ms-examples": {
          "ConsumerGroupsListAll": {
            "$ref": "./examples/ConsumerGroup/EHConsumerGroupListByEventHub.json"
          }
        },
        "description": "Gets all the consumer groups in a Namespace. An empty feed is returned if no consumer group exists in the Namespace.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "#/parameters/EventHubNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/SkipParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of consumer groups.",
            "schema": {
              "$ref": "#/definitions/ConsumerGroupListResult"
            }
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "Resource": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        }
      },
      "description": "The Resource definition",
      "x-ms-azure-resource": true
    },
    "ConsumerGroup": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "createdAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "Exact time the message was created."
            },
            "updatedAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "The exact time the message was updated."
            },
            "userMetadata": {
              "type": "string",
              "description": "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored."
            }
          },
          "description": "Single item in List or Get Consumer group operation"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Single item in List or Get Consumer group operation"
    },
    "ConsumerGroupListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsumerGroup"
          },
          "description": "Result of the List Consumer Group operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of Consumer Group"
        }
      },
      "description": "The result to the List Consumer Group operation."
    },
    "ErrorResponse": {
      "description": "Error response indicates EventHub service is not able to process the incoming request. The reason is provided in the error message.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string"
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API Version."
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method",
      "description": "Name of the resource group within the azure subscription."
    },
    "NamespaceNameParameter": {
      "name": "namespaceName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 6,
      "maxLength": 50,
      "x-ms-parameter-location": "method",
      "description": "The Namespace name"
    },
    "EventHubNameParameter": {
      "name": "eventHubName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "x-ms-parameter-location": "method",
      "description": "The Event Hub name"
    },
    "ConsumerGroupNameParameter": {
      "name": "consumerGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "x-ms-parameter-location": "method",
      "description": "The consumer group name"
    },
    "SkipParameter": {
      "name": "$skip",
      "description": "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
      "in": "query",
      "required": false,
      "type": "integer",
      "minimum": 0,
      "maximum": 1000,
      "x-ms-parameter-location": "method"
    },
    "TopParameter": {
      "name": "$top",
      "description": "May be used to limit the number of results to the most recent N usageDetails.",
      "in": "query",
      "required": false,
      "type": "integer",
      "minimum": 1,
      "maximum": 1000,
      "x-ms-parameter-location": "method"
    }
  }
}